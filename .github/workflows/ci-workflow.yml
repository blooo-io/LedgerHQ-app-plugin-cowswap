name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build Plugin
        run: |
          make DEBUG=1

      - name: Upload Plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: plugin-app-debug
          path: bin

  job_scan_build:
    name: Clang Static Analyzer
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_coverity_scan:
    name: Coverity Scan
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/blooo-io/ledger-app-builder/ledger-app-scanner:master

    steps:
      - uses: actions/checkout@v2

      - name: Build with cov-build
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          cov-build --dir cov-int make default
      - name: Submit the result to Coverity Scan
        run: |
          tar czvf cov-int.tar.gz cov-int
          curl \
            --form token=$TOKEN \
            --form email=$EMAIL \
            --form file=@cov-int.tar.gz \
            --form version=master \
            --form description="Plugin" \
            https://scan.coverity.com/builds?project=LedgerHQ%2Fapp-plugin-cowswap
        # Change the line above to the new url for this plugin
        env:
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

  job_build_debug_nano_s:
    name: Build debug Nano S
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build plugin for Nano S
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make BOLOS_SDK=$NANOS_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/cowswap_nanos.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/cowswap_nanos.elf

  job_build_debug_nano_sp:
    name: Build debug Nano S+
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build plugin for Nano S+
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make BOLOS_SDK=$NANOSP_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/cowswap_nanosp.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/cowswap_nanosp.elf

  job_build_debug_nano_x:
    name: Build debug Nano X
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build plugin for Nano X
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make BOLOS_SDK=$NANOX_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/cowswap_nanox.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/cowswap_nanox.elf

  job_build_ethereum_nano_s:
    name: Build Ethereum application for Nano S testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ ((github.base_ref || github.ref_name) == 'main' && 'master') || (github.base_ref || github.ref_name) }}
          submodules: recursive
      - name: Build ethereum
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOS_SDK CHAIN=ethereum ALLOW_DATA=1
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanos.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanos.elf

  job_build_ethereum_nano_sp:
    name: Build Ethereum application for Nano S+ testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ ((github.base_ref || github.ref_name) == 'main' && 'master') || (github.base_ref || github.ref_name) }}
          submodules: recursive
      - name: Build ethereum
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOS_SDK CHAIN=ethereum ALLOW_DATA=1
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanosp.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanosp.elf

  job_build_ethereum_nano_x:
    name: Build Ethereum application for Nano X testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ ((github.base_ref || github.ref_name) == 'main' && 'master') || (github.base_ref || github.ref_name) }}
          submodules: recursive
      - name: Build ethereum
        # Change the line below to the new safe directory
        run: |
          git config --global --add safe.directory /__w/LedgerHQ-app-plugin-cowswap/LedgerHQ-app-plugin-cowswap
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOX_SDK CHAIN=ethereum ALLOW_DATA=1
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanox.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanox.elf

  jobs-e2e-tests:
    needs:
      - job_build_debug_nano_s
      - job_build_debug_nano_x
      - job_build_ethereum_nano_s
      - job_build_ethereum_nano_x
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download built binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: tests/elfs/
      - name: Check downloaded binaries
        run: ls -lh ./tests/elfs
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "16.4.0"
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build/Install build js deps
        run: |
          cd tests && yarn install
      - name: Run zemu tests
        run: |
          cd tests && yarn test
